# Work Order Transaction Form — Functional and Technical Specification [Ref: ../../References/Visual Highlighted Screenshots/WorkOrderScreenshotHighlighted.png; ../../References/Visual PDF Files/Text Conversion/Reference - Inventory.txt]

Purpose: define UI, validations, workflow, role gating, integration, storage, and configuration to implement Work Order (WO) transactions for Infor Visual (VMFG) in this Avalonia/.NET 8 application. [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Shop Floor.txt]

Global Rule — Visual license lifecycle
- Any time the app performs an operation against the Visual server that requires a license, the license MUST be explicitly closed/released immediately after the request completes (success or failure). Always use a short‑lived, per‑request scope to acquire and dispose the license.

Scope: supports Receipt by WO (completion to stock) and Issue to WO; detects Over Receipts; blocks Closed WOs while logging them; enforces availability checks; and writes non-Visual data to the application database. [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Inventory.txt]

Platform: Avalonia 11 MVVM on .NET 8 with desktop lifetime; MainWindow/MainView bind to a ViewModel orchestrating commands and services. [Ref: ../../../MTM_Inventory_Application_Avalonia.Desktop/MTM_Inventory_Application_Avalonia.Desktop.csproj]

Shell wiring: MainView hosts feature views via NavigationService.OpenWorkOrderTransaction(); Login overlay is shown inside MainView at startup and hidden after auth. [Ref: ../../App.axaml.cs]

## Code Naming and Error Handling Rules
- File naming: {Type}_{Parent}_{Name}
- Methods: {Class}_{ControlType}_{Name}
- Variables: {Method}_{Type(Int|string|exc)}_{Name}
- All methods must have error handling and must use the same centralized error handling (IExceptionHandler).

## Screenshot highlighting (reference only)
- Colors shown in screenshots are illustrative callouts only to identify field roles and sections; they do not define application theming. Implement standard app styling and follow the functional groupings indicated by the highlights.

## User Roles and Permissions (effective on this form) [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Core.txt]
- Material Handler: can validate WOs, check availability, and post Issue/Receipt transactions; can add entries to exception reports (Closed WO, Over Receipt, Not Enough @ Location). [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Inventory.txt]
- Inventory Specialist: can perform corrective transactions, adjust reasons, and resolve discrepancies; can add exception entries. [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Inventory.txt]
- Material Handler Lead (Supervisor/Approver): all above plus approval authority for policy-gated overrides (e.g., over-receipt approval if allowed). [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Core.txt]
- Read-Only: can search and view WO status, item, locations, and history; cannot post or create/modify exception entries. [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - VMFG Shared Library.txt]

Role-to-command mapping: ValidateWorkOrder/CheckAvailability for all roles; PostTransaction for Material Handler/Inventory Specialist/Lead; ApproveOverReceipt only for Lead; all write operations denied for Read-Only (client and server enforced). [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Core.txt]

## Color-Coded Field Behavior [Ref: ../../References/Visual Highlighted Screenshots/WorkOrderScreenshotHighlighted.png; ../../References/Visual PDF Files/Text Conversion/Reference - Inventory.txt]
- Yellow (user-entered): Work Order ID; Quantity; Location (From for Issue; To for Receipt).
- Green (static/read-only, set to what is in the screenshot): Site ID; Base/Split/Sub IDs; Warehouse ID (e.g., "002"); any other fixed context shown in the image.
- Orange/Red (auto after WO input, read-only): Item/Part; Description; WO Quantities (Desired/Received/Due); On Hand/Available; Unit Costs; User ID; other calculated/informational values in the image.
- Blue (auto current date, read-only): Transaction Date is set to today.

Warehouse ID policy: green and read-only; initialized to the value shown in the screenshot (e.g., "002"); editable later via configuration without code changes. [Ref: ../../References/Visual DLL & Config Files/Database.config]

## Fields and Validation Rules [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Inventory.txt]
- Work Order ID (yellow, required): must exist and be open/eligible; if Closed/Canceled, posting is blocked and an entry is added to the Closed Work Orders report. [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Shop Floor.txt]
- Transaction Type (required): Issue to WO or Receipt by WO (completion to stock); first release supports these two types. [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Inventory.txt]
- Quantity (yellow, required): > 0; for Receipt compare to Remaining (over-receipt detection); for Issue compare to Available at From Location (insufficient detection). [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Inventory.txt]
- From Location (yellow for Issue): must exist and be active; show On-hand/Allocated/Available. [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Inventory.txt]
- To Location (yellow for Receipt): must exist and be active; bin-type compatibility as applicable. [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Inventory.txt]
- Warehouse ID (green): fixed from settings/screenshot value (e.g., "002"), not editable; included in all posts. [Ref: ../../References/Visual DLL & Config Files/Database.config]
- Site ID (green): derived from environment/site configuration; not editable. [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - VMFG Shared Library.txt]
- Transaction Date (blue): auto-set to current date; read-only. [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Core.txt]
- Operation/Sequence (optional): for routing context if required by policy. [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Shop Floor.txt]
- Lot/Serial (conditional): required for lot/serial-controlled items; serial count must match quantity for serial-controlled. [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Inventory.txt]
- Reason Code (conditional): required for over-receipt or variance if configured. [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Inventory.txt]
- Comments (optional): allow audit context up to policy-defined length. [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Core.txt]

## Visual API Commands (by scenario)
- Authenticate/Connect
  - Dbms.OpenLocal(instance, user, pass) or OpenLocalSSO(instance, userName, userSID, domain, domainSID); always Close/Dispose after use. [Intro - Development Guide.txt, p.13–14; Reference - Core.txt, p.33–37]
  - Confirm identity: Dbms.UserID(instance). [Reference - Core.txt, p.48]
- Validate Work Order
  - GetWorkOrderSummary header/status/remaining via Shop Floor service to validate open/eligible status and remaining qty. [Reference - Shop Floor.txt, p.98–100]
- Check Availability (Issue)
  - Use GeneralQuery to read On-hand/Allocated/Available for Part at From Warehouse/Location (parameterized). [Reference - Shared Library.txt, p.5–24]
  - Optional defaulting: VmfgShared.GetPartDefaultWhseLoc(part) for warehouse/location defaults. [Reference - VMFG Shared Library.txt, p.5–6]
- Post Issue to WO
  - InventoryTransaction: populate required header fields (TRANSACTION_DATE, QTY, WORK_ORDER keys, FROM_WAREHOUSE/LOCATION, ITEM_NO, REASON if required) and TRACE rows for lot/serial control; execute/save transaction. [Reference - Inventory.txt, p.110–113]
- Post Receipt by WO
  - InventoryTransaction: populate TRANSACTION_DATE, QTY, TO_WAREHOUSE/LOCATION, WORK_ORDER keys, ITEM_NO; enforce over-receipt policy; include TRACE when required; execute/save. [Reference - Inventory.txt, p.110–113]
- Lot/Serial Capture
  - Populate TRACE sub-table entries per lot/serial control before executing the InventoryTransaction. [Reference - Inventory.txt, p.112–113]

All methods must use centralized error handling (IExceptionHandler): wrap each of the calls above in try/catch and normalize via ExceptionHandler. VISUAL interactions belong in service adapters, not in ViewModels/Views, per README rules.

## Business Rules and Exceptions [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Inventory.txt]
- Closed Work Orders: block posting and create/append entry in Closed Work Orders report with WO, Item, Attempted Qty, User, Timestamp, Reason "WO Closed". [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Shop Floor.txt]
- Over Receipts (Receipt by WO): if Quantity > Remaining, prompt user; always log to Over Receipts report; allow override only if policy allows and Lead approves. [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Inventory.txt]
- Not Enough at From Location (Issue): if On-hand < Quantity, prompt to verify or log "Not enough @ {From Location}"; posting is blocked. [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Inventory.txt]
- Lot/Serial compliance: enforce capture before posting per item control flags. [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Inventory.txt]

All above exception flows are routed to the centralized Exception Handling Form for normalization, user messaging, approvals (where required), and optional logging. See ../MVVMDefinitions/ExceptionHandling.md.

## Workflows [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Shop Floor.txt]
- Receipt by WO (happy path): enter WO (yellow) → load header/status/remaining → enter Quantity and To Location (yellow) → Warehouse = green (screenshot value), Date = today (blue) → validate (closed/over-receipt/lot-serial) → post → write Visual transaction + local audit → clear. [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Inventory.txt]
- Issue to WO (happy path): enter WO (yellow) → enter Quantity and From Location (yellow) → Warehouse = green (screenshot value) → validate availability → post → write Visual transaction + local audit → clear. [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Inventory.txt]
- Exception paths: Closed WO (block + report), Over Receipt (prompt + report + optional approval), Not Enough (prompt + report + block). [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Inventory.txt]

All exception paths invoke the Exception Handling Form to present messages/actions and record entries where appropriate. See ../MVVMDefinitions/ExceptionHandling.md.

## Reporting Hooks (exception logs)
- For app-owned tables and DDL details, see ../MVVMDefinitions/MAMPDatabase.md.

## Data Storage Policy and Environment Configuration
- Any data that cannot be stored on the Visual server is written to the app-owned database. See ../MVVMDefinitions/MAMPDatabase.md for schema and to ../../README.md for connection selection via Database.config and environment overrides.

## ViewModel, Commands, and Role Gating (Avalonia MVVM) [Ref: ../../App.axaml.cs]
- ViewModel: WorkOrderTransactionViewModel exposes properties for fields above with INotifyDataErrorInfo validation and computed availability. [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Core.txt]
- Commands: ValidateWorkOrder, CheckAvailability, PostTransaction, Reset, OpenHistory, OpenReports, ApproveOverReceipt (Lead only), WorkOrder_Button_ResolveIncompletePartId (placeholder: uses WorkOrderId as seed and writes result back to placeholder until a Part field is added).
- Role gating: enable/disable inputs and commands per role; always enforce server-side authorization to prevent elevation. [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - VMFG Shared Library.txt]

## Integration Approach [Ref: ../../References/Visual CSV Database Dumps/MTMFG Procedure List.csv]
- Prefer official stored procedures for posting/validation where documented in the procedure list; avoid direct writes to Visual transactional tables. [Ref: ../../References/Visual CSV Database Dumps/MTMFG Procedure List.csv]
- If assemblies are licensed/available, encapsulate calls to VmfgInventory/VmfgShopFloor/VmfgShared in an application service adapter; never bind UI directly to assemblies. [Ref: ../../References/Visual DLL & Config Files/VmfgInventory.dll; ../../References/Visual DLL & Config Files/VmfgShopFloor.dll; ../../References/Visual DLL & Config Files/VmfgShared.dll; ../../References/Visual DLL & Config Files/VmfgTrace.dll; ../../References/Visual DLL & Config Files/LsaCore.dll; ../../References/Visual DLL & Config Files/LsaShared.dll]
- Use MTMFG Tables/Relationships CSVs to confirm entity names and joins for read models and availability lookups. [Ref: ../../References/Visual CSV Database Dumps/MTMFG Tables.csv; ../../References/Visual CSV Database Dumps/MTMFG Relationships.csv]
- License lifecycle: acquire Visual license per call and release/close it immediately after each operation (success or failure). Enforce timeouts and use finally/failure paths to guarantee disposal.

## Error Handling and UX [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Core.txt]
- Show actionable messages with WO/Item/Qty/Location context and procedure error text when available (rendered by the Exception Handling Form). [Ref: ../../References/Visual CSV Database Dumps/MTMFG Procedure List.csv]
- Debounce lookups and cache last-used locations/transaction type per user; optimize for barcode scanning. [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Shared Library.txt]
- Maintain keyboard-first flow; set sensible default focus (WO → Qty → Location). [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Inventory.txt]

## Testing and Acceptance Criteria [Ref: ../../References/Visual PDF Files/Text Conversion/Reference - Inventory.txt]
- Implement field behaviors per screenshot highlights (reference only); no special color theming is required.
- Transaction Date auto = current date; cannot be changed by user. [Ref: Reference - Inventory.txt, p.110]
- Warehouse ID read-only and equals settings/screenshot value (e.g., "002"); changing settings updates value on next start. [Ref: ../../References/Visual DLL & Config Files/Database.config]
- Closed WO attempts block posting and append to Closed Work Orders report (app DB). [Ref: Reference - Shop Floor.txt, p.15]
- Over Receipt detection prompts, logs, and requires Lead approval if policy allows override. [Ref: Reference - Inventory.txt]
- Not Enough @ From Location prompts, logs, and blocks posting. [Ref: Reference - Inventory.txt]
- Non-Visual data writes to the app-owned database per environment. See ../MVVMDefinitions/MAMPDatabase.md and ../../README.md.

## UI Scaffolding (Avalonia 11)
- Views
  - Views/WorkOrderTransactionView.axaml: main form; group fields per the screenshot highlights (illustrative only); use standard app styling (no special color theming required).
  - Use ExceptionHandling Form for all blocking/approval paths (no bespoke dialogs here).
- ViewModels
  - ViewModels/WorkOrderTransactionViewModel.cs: properties for WO, Qty, From/To (per transaction), WarehouseId/SiteId/TransactionDate (ro); derived for item/quantities; INotifyDataErrorInfo.
- Commands and Shortcuts
  - ValidateWorkOrderCommand, CheckAvailabilityCommand, PostTransactionCommand, ResetCommand; map keys (Enter to commit, Esc to cancel prompts).
- Services and DI
  - IInventoryService, IExceptionHandler, IClock, ISettings, IAppDb (for local history/exception tables).
- DataTemplates and Navigation
  - Use NavigationService.OpenWorkOrderTransaction() to host the View inside MainView content area.

## References (artifacts used by this document)
- ../../References/Visual Highlighted Screenshots/WorkOrderScreenshotHighlighted.png (field groupings and layout hints; colors are highlights only).
- ../../References/Visual PDF Files/Text Conversion/Intro - Development Guide.txt (environment/config guidance).
- ../../References/Visual PDF Files/Text Conversion/Reference - Core.txt (roles, audit, validation patterns).
- ../../References/Visual PDF Files/Text Conversion/Reference - Inventory.txt (transactions, lot/serial, rules).
- ../../References/Visual PDF Files/Text Conversion/Reference - Shop Floor.txt (WO status, completion).
- ../../References/Visual PDF Files/Text Conversion/Reference - VMFG Shared Library.txt (shared types/permissions, AppGlobal).
- ../../References/Visual CSV Database Dumps/MTMFG Tables.csv; ../../References/Visual CSV Database Dumps/MTMFG Relationships.csv; ../../References/Visual CSV Database Dumps/MTMFG Procedure List.csv (entities/joins/procedures).
- ../../References/Visual DLL & Config Files/VmfgInventory.dll; ../../References/Visual DLL & Config Files/VmfgShopFloor.dll; ../../References/Visual DLL & Config Files/VmfgShared.dll; ../../References/Visual DLL & Config Files/VmfgTrace.dll; ../../References/Visual DLL & Config Files/LsaCore.dll; ../../References/Visual DLL & Config Files/LsaShared.dll (integration assemblies).
- ../../../MTM_Inventory_Application_Avalonia.Desktop/MTM_Inventory_Application_Avalonia.Desktop.csproj; ../../App.axaml.cs
- ./ExceptionHandling.md
- ./MAMPDatabase.md

## Implementation status (scaffold)
- View created: ../../Views/WorkOrderTransactionView.axaml
- ViewModel created: ../../ViewModels/WorkOrderTransactionViewModel.cs
- Open from MainView via NavigationService.OpenWorkOrderTransaction().
- Commands are placeholders; WorkOrder_Button_ResolveIncompletePartId uses IPartDialogService with a placeholder seed until a Part field is added; VISUAL calls to be implemented in service layer; errors via IExceptionHandler.
